void FPSyn_Intersection2D(REAL x1,REAL x2,REAL x3,REAL x4,REAL y1,REAL y2,REAL y3,REAL y4,REAL* result, REAL* error_bound){
//Calculation steps for input: ;
REAL t0=-x4;
REAL t1=t0+x3;
REAL t2=-x2;
REAL t3=t2+x1;
REAL t4=x1*y2;
REAL t5=t2*y1;
REAL t6=t4+t5;
REAL t7=t1*t6;
REAL t8=x3*y4;
REAL t9=t0*y3;
REAL t10=t8+t9;
REAL t11=t10*t3;
REAL t13=t7-t11;
REAL t15=y3-y4;
REAL t16=t15*t3;
REAL t18=y1-y2;
REAL t19=t1*t18;
REAL t21=t16-t19;
REAL t22=t13/t21;
//Calculation steps for Error-bound: ;
t1=fabs(t1);
t9=fabs(t9);
t11=fabs(t11);
t8=fabs(t8);
t3=fabs(t3);
t4=fabs(t4);
t5=fabs(t5);
t7=fabs(t7);
t16=fabs(t16);
t19=fabs(t19);
t13=fabs(t13);
t21=fabs(t21);
REAL temp0=t4+t5;
REAL temp1=t1*temp0;
REAL temp2=t8+t9;
REAL temp3=t3*temp2;
REAL temp4=temp1+temp3;
REAL temp5=5.55111512312578e-16*temp4;
REAL temp6=t16+t19;
REAL temp7=4.44089209850063e-16*temp6;
*result=t22;
t22=fabs(t22);
REAL A=(t13*temp7+t21*temp5)*1.0000000001;
REAL B=(t21-1.0000000001*temp7)*0.9999999999999998;
REAL E=(A/t21*1.0000000000000002/B*1.0000000000000002+t22*1.1102230246251565e-16*1.0000000000000002)*1.0000000000000002;
*error_bound=t21<=temp7?1/0:E;
}

void FPSyn_Orient3D(REAL ax,REAL ay,REAL az,REAL bx,REAL by,REAL bz,REAL cx,REAL cy,REAL cz,REAL dx,REAL dy,REAL dz,REAL* result, REAL* error_bound){
//Calculation steps for input: ;
REAL t2=by-dy;
REAL t4=cz-dz;
REAL t5=bz-dz;
REAL t6=cy-dy;
REAL t7=ay-dy;
REAL t8=az-dz;
REAL t9=ax-dx;
REAL t10=t2*t4;
REAL t11=t5*t6;
REAL t13=t10-t11;
REAL t14=t13*t9;
REAL t15=cx-dx;
REAL t16=t5*t7;
REAL t17=t2*t8;
REAL t19=t16-t17;
REAL t20=t15*t19;
REAL t21=bx-dx;
REAL t22=t4*t7;
REAL t23=t6*t8;
REAL t25=t22-t23;
REAL t26=t21*t25;
REAL t28=t14+t20;
REAL t29=t28-t26;
//Calculation steps for Error-bound: ;
t15=fabs(t15);
t22=fabs(t22);
t23=fabs(t23);
t10=fabs(t10);
t11=fabs(t11);
t29=fabs(t29);
t17=fabs(t17);
t16=fabs(t16);
t21=fabs(t21);
t9=fabs(t9);
REAL tem0=t16+t17;
REAL tem1=t15*tem0;
REAL tem2=t22+t23;
REAL tem3=t21*tem2;
REAL tem4=t10+t11;
REAL tem5=t9*tem4;
REAL tem6=tem1+tem3;
REAL tem7=tem5+tem6;
REAL tem8=7.7715611723761e-16*tem7;
REAL tem9=1.11022302462516e-16*t29;
REAL tem10=tem8+tem9;
*result=t29;
*error_bound=1.0000000001*tem10;
}

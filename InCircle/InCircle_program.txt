void FPSyn_InCircle(REAL ax,REAL ay,REAL bx,REAL by,REAL cx,REAL cy,REAL dx,REAL dy,REAL* result, REAL* error_bound){
//Calculation steps for input: ;
REAL t1=cx-dx;
REAL t3=cy-dy;
REAL t4=ax-dx;
REAL t5=by-dy;
REAL t6=ay-dy;
REAL t7=bx-dx;
REAL t8=t1*t1;
REAL t9=t3*t3;
REAL t10=t8+t9;
REAL t11=t4*t5;
REAL t12=t6*t7;
REAL t14=t11-t12;
REAL t15=t10*t14;
REAL t16=t4*t4;
REAL t17=t6*t6;
REAL t18=t16+t17;
REAL t19=t3*t7;
REAL t20=t1*t5;
REAL t22=t19-t20;
REAL t23=t18*t22;
REAL t24=t5*t5;
REAL t25=t7*t7;
REAL t26=t24+t25;
REAL t27=t3*t4;
REAL t28=t1*t6;
REAL t30=t27-t28;
REAL t31=t26*t30;
REAL t33=t15+t23;
REAL t34=t33-t31;
//Calculation steps for Error-bound: ;
t19=fabs(t19);
t34=fabs(t34);
t20=fabs(t20);
t28=fabs(t28);
t27=fabs(t27);
t11=fabs(t11);
t12=fabs(t12);
REAL tem0=t11+t12;
REAL tem1=t10*tem0;
REAL tem2=t19+t20;
REAL tem3=t18*tem2;
REAL tem4=t27+t28;
REAL tem5=t26*tem4;
REAL tem6=tem1+tem3;
REAL tem7=tem5+tem6;
REAL tem8=1.11022302462516e-15*tem7;
REAL tem9=1.11022302462516e-16*t34;
REAL tem10=tem8+tem9;
*result=t34;
*error_bound=1.0000000001*tem10;
}
